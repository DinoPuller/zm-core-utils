#!/bin/bash
# 
# ***** BEGIN LICENSE BLOCK *****
# Zimbra Collaboration Suite Server
# Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2013, 2014 Zimbra, Inc.
# 
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software Foundation,
# version 2 of the License.
# 
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# You should have received a copy of the GNU General Public License along with this program.
# If not, see <http://www.gnu.org/licenses/>.
# ***** END LICENSE BLOCK *****
# 



if [ x`whoami` != "xzimbra" ]; then
  echo "$0 must be run as user zimbra"
  exit 1
fi

source `dirname $0`/zmshutil || exit 1
zmsetvars

sasl_conf_directory=/opt/zimbra/cyrus-sasl/etc
mailboxd_server=jetty
mailboxd_conf_directory=${mailboxd_directory}/etc
jetty_web_xml=/opt/zimbra/jetty/etc

if [ $# -gt 1 ]; then
    echo "Usage: $0 [mixed|both|http|https|redirect|help]"
    exit 1
fi
  
case "$1" in
  mixed|both|http|https|redirect)
    MODE=$1
    UPDATE_MAIL_MODE=1
    ;;
  help|--help|-help)
    echo "Usage: $0 [mixed|both|http|https|redirect]"
    exit 0
    ;;
  '')
    ;;
  *)
    echo "Usage: $0 [mixed|both|http|https|redirect|help]"
    exit 1
    ;;
esac

export JAVA_HOME=${zimbra_java_home}

if [ "x${zimbra_tmp_directory}" = "x" ]; then
  zimbra_tmp_directory=/opt/zimbra/data/tmp
fi

if [ ! -d ${zimbra_tmp_directory} ]; then
  mkdir -p ${zimbra_tmp_directory}
fi

if [ "x$zimbra_server_hostname" = "x" ]; then
  echo "ERROR: Unable to determine zmhostname"
  exit 1;
fi

rewriteConfigs() {
	echo -n "Rewriting config files for cyrus-sasl, webxml, mailboxd, service, zimbraUI, and zimbraAdmin..."
	/opt/zimbra/libexec/configrewrite sasl webxml mailbox service zimbra zimbraAdmin zimlet> /dev/null 2>&1
	if [ $? = 0 ]; then
		echo "done."
	else
		echo "failed."
		exit 1
	fi
}

updateLdap() {
	echo -n "Setting ldap config zimbraMailMode $MODE for ${zimbra_server_hostname}..."
	/opt/zimbra/bin/zmprov -l ms ${zimbra_server_hostname} zimbraMailMode $MODE > /dev/null
	if [ $? = 0 ]; then
		echo "done."
	else
		echo "failed."
		exit 1
	fi
}

if [ x"$UPDATE_MAIL_MODE" = "x1" ]; then
  updateLdap
fi

rewriteConfigs
